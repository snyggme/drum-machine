{"version":3,"sources":["components/Button.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","class","handleClick","bind","assertThisInitialized","handleKeydown","document","addEventListener","removeEventListener","getElementById","name","volume","e","String","fromCharCode","keyCode","_this2","audio","setState","setTimeout","powerTrigger","currentTime","setDisplayedText","id","play","react_default","a","createElement","className","onClick","src","Component","Control","justify","trigger","justifySelf","style","width","marginLeft","fontSize","fontWeight","textAlign","height","backgroundColor","display","alignItems","marginBottom","borderRadius","cursor","App","displayedText","bankTrigger","handleDisplayedText","handlePowerButton","handleBankButton","handleVolumeChange","text","prevState","target","value","Math","round","_this3","keys","bankSecond","concat","bankFirst","map","val","components_Button","key","Control_Control","type","min","max","step","onChange","disabled","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62cb1802.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      class: 'drum-pad'\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n    this.handleKeydown = this.handleKeydown.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeydown)\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n  componentWillUpdate() {\r\n    document.getElementById(this.props.name).volume = this.props.volume;\r\n  }\r\n  handleKeydown(e) {\r\n    if (String.fromCharCode(e.keyCode) === this.props.name)\r\n        this.handleClick()\r\n  }\r\n  handleClick() {\r\n    const audio = document.getElementById(this.props.name)\r\n\r\n    this.setState({\r\n      class: 'drum-pad clicked-btn'\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        class: 'drum-pad'\r\n      })\r\n    }, 100)\r\n\r\n    if (!this.props.powerTrigger)\r\n      return\r\n\r\n    audio.currentTime = 0;\r\n    \r\n    this.props.setDisplayedText(this.props.id)\r\n    \r\n    audio.play();\r\n  }\r\n  render() { \r\n    return (\r\n      <div className={this.state.class} id={this.props.id} onClick={this.handleClick}>\r\n        <audio className='clip' id={this.props.name} src={this.props.src}></audio>\r\n        {this.props.name}   \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nexport const Control = (props) => {\r\n  const justify = props.trigger ? {justifySelf: 'start'} : {justifySelf: 'end'}\r\n  const styles = {width: '100%', height: '30px', backgroundColor: '#435872', display: 'grid', alignItems: 'center', marginBottom: '20px', borderRadius: '15px', cursor: 'pointer'}\r\n  return (\r\n    <div style={{width:'75px', marginLeft: '30px', fontSize: '20px', fontWeight: 'bold', textAlign: 'center'}}>\r\n      {props.name}\r\n      <div onClick={props.onClick} style={styles}>\r\n        <div className='control-btn' style={justify}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react'\nimport Button from './components/Button'\nimport { Control } from './components/Control'\nimport './App.scss'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      volume: '1',\n      displayedText: '',\n      powerTrigger: true,\n      bankTrigger: false\n    }\n    this.handleDisplayedText = this.handleDisplayedText.bind(this)\n    this.handlePowerButton = this.handlePowerButton.bind(this)\n    this.handleBankButton = this.handleBankButton.bind(this)\n    this.handleVolumeChange = this.handleVolumeChange.bind(this)\n  } \n  handleDisplayedText(text) {\n    this.setState({\n      displayedText: text\n    })\n  }\n  handlePowerButton() {\n    this.setState(prevState => ({\n      powerTrigger: !prevState.powerTrigger \n    }))\n  }\n  handleBankButton() {\n    const text = this.state.bankTrigger ? 'Drum Bank' : 'Piano Bank'\n    this.setState(prevState => ({\n      bankTrigger: !prevState.bankTrigger,\n      displayedText: text\n    }))\n  }\n  handleVolumeChange(e) {\n    this.setState({\n      volume: e.target.value,\n      displayedText: 'Volume: ' + Math.round(e.target.value * 100)\n    })\n    \n    setTimeout(() => {\n      this.setState({\n        displayedText: '' \n      })\n    }, 1000)\n  }\n  render() {\n    const keys = this.state.bankTrigger ? [...bankSecond] : [...bankFirst] \n    const content = this.state.powerTrigger ? \n          (<div id=\"drum-machine\">\n            <div id=\"grid\">\n              {keys.map(val => \n                <Button name={val.key} \n                        volume={this.state.volume} \n                        src={val.src} \n                        id={val.id} \n                        setDisplayedText={this.handleDisplayedText}\n                        powerTrigger={this.state.powerTrigger}/>)}\n            </div>\n            <div className=\"controls-grid\">\n              <Control name='Power' trigger={this.state.powerTrigger}  onClick={this.handlePowerButton}/>\n              <div id=\"display\">{this.state.displayedText}</div>\n              <Control name='Bank' trigger={this.state.bankTrigger} onClick={this.handleBankButton}/>\n              <div className=\"slider\">\n                <input type=\"range\" min='0' max='1' step='0.01'  onChange={this.handleVolumeChange}/>\n              </div>\n            </div>\n          </div>)\n         : \n          (<div id=\"drum-machine\">\n            <div id=\"grid\">\n              {keys.map(val => <Button name={val.key} volume={this.state.volume} />)}\n            </div>\n            <div className=\"controls-grid\">\n              <Control name='Power' trigger={this.state.powerTrigger}  onClick={this.handlePowerButton}/>\n               <div id=\"display\">{this.state.displayedText}</div>\n              <Control name='Bank' trigger={this.state.bankTrigger}/>\n              <div className=\"slider\">\n                <input type=\"range\" min='0' max='1' step='0.01'  disabled='true'/>\n              </div> \n            </div>\n          </div>)\n        \n    return content\n  }\n}\n\nconst bankFirst = [\n  {\n    key: 'Q',\n    id: 'Snare',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/snare.wav'\n  },\n  {\n    key: 'W',\n    id: 'Organ',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/organ.mp3'\n  },\n  {\n    key: 'E',\n    id: 'Guitar 1',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/guitar.wav'\n  },\n  {\n    key: 'A',\n    id: 'Guitar 2',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/guitar%20strum.wav'\n  },\n  {\n    key: 'S',\n    id: 'Kick Bass',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/kick%20bass.mp3'\n  },\n  {\n    key: 'D',\n    id: 'Kick Drum',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/kick%20drum.mp3'\n  },\n  {\n    key: 'Z',\n    id: 'Clap',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/clap.wav'\n  },\n  {\n    key: 'X',\n    id: 'Sax',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/saxophone.WAV'\n  },\n  {\n    key: 'C',\n    id: 'Plastic Drum',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/plastic%20drum.mp3'\n  }\n]\n\nconst bankSecond = [\n  {\n    key: 'Q',\n    id: 'Piano 1',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/piano.wav'\n  },\n  {\n    key: 'W',\n    id: 'Piano 2',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/piano%202.wav'\n  },\n  {\n    key: 'E',\n    id: 'Piano 3',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/piano%203.wav'\n  },\n  {\n    key: 'A',\n    id: 'Piano 4',\n    src: 'https://freesound.org/data/previews/203/203502_1622584-lq.mp3'\n  },\n  {\n    key: 'S',\n    id: 'Piano Hit',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/piano%20hit.mp3'\n  },\n  {\n    key: 'D',\n    id: 'Conga 1',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/conga.wav'\n  },\n  {\n    key: 'Z',\n    id: 'Conga 2',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/conga%202.wav'\n  },\n  {\n    key: 'X',\n    id: 'Conga 3',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/conga%203.wav'\n  },\n  {\n    key: 'C',\n    id: 'Alarm',\n    src: 'https://raw.githubusercontent.com/snyggme/m3-solution/master/site/mp3_bank1/alarm.mp3'\n  }\n]\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}